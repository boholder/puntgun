# Workflow that be active only a "v*.*.*" version tag is pushed to the main branch.
# Version tags should only be created on commits that HAVE passed unit tests ("TEST" GitHub action).
#
# This workflow will:
# 1. Build wheel and source distribution.
# 2. Upload wheel and source to the pypi.
# 3. Create a release with information from CHANGELOG.md.
# 4. Build fixed version documentation and push it to "gh-pages" branch.

name: Release

on:
  # if we set both "branches" and "tags", they'll be judged in union instead of intersection.
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-excluding-branches-and-tags
  push:
    tags:
      - "v*.*.*"

env:
  default-python: "3.10"

jobs:
  build-doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.default-python }}

      - name: Install doc dependencies
        run: |
          python3 -m pip install -U pdm
          pdm install -dG doc

      - name: Build doc and upload to gh-pages branch
        # ${tag%.*} Only concern major.minor version,
        # documentation updates with patches will be updated into one minor version.
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git fetch origin gh-pages:gh-pages
          tag="${{ github.ref_name }}"
          DOC_VERSION=${tag%.*}
          cd docs && pdm run mike deploy --no-redirect --update-aliases "$DOC_VERSION" latest
          git push origin gh-pages

  build-wheel-and-src:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.default-python }}

      - name: Build wheels and source distribution
        run: |
          python3 -m pip install -U build
          python3 -m build --sdist --wheel .

      - name: Test wheel build
        run: |
          python3 -m venv fresh_env
          . fresh_env/bin/activate
          python3 -m pip install -U dist/*.whl
          fresh_env/bin/puntgun --help

      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: dist/*

  upload_to_pypi:
    needs: [ build-wheel-and-src ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

  create-github-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get changelog
        run: |
          awk '/-{3,}/{flag=1;next}/Release/{if (flag==1)exit}flag' CHANGELOG.md > .changelog.md

      - name: Create release
        # https://github.com/softprops/action-gh-release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          body_path: .changelog.md
          draft: false
          prerelease: false