# Action that be active only when a "v*.*.*" version tag is pushed to the repo.
# Version tags should only be created on commits that HAVE passed unit tests ("TEST" GitHub action).
#
# This action will:
# 1. Build wheels and source distribution.
# 2. Upload files generated in step 1 to pypi.
# 3. Create a release with information from CHANGELOG.md.
#
# Drawing on:
# https://github.com/pypa/cibuildwheel/blob/main/examples/github-deploy.yml
# https://github.com/pdm-project/pdm/blob/main/.github/workflows/release.yml
# https://github.com/softprops/action-gh-release

name: Release

on:
  push:
    tags:
      - "v*.*.*"
  pull_request:
    tags:
      - "v*.*.*"

env:
  default-python: "3.10"

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.default-python }}

      - name: Install build tool
        run: |
          pip install -U build .

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.9.0
        with:
          package-dir: .
          output-dir: dist
          config-file: "{package}/pyproject.toml"

      - name: Test wheel build
        run: |
          python3 -m venv fresh_env
          . fresh_env/bin/activate
          pip install ./dist/*.whl
          fresh_env/bin/puntgun --help

      - name: Build source distribution
        run: |
          python -m build --sdist .

      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: dist/*

  build-doc:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Build documentation
        run: |
          pip install pdm
          pdm install -G doc
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git fetch origin gh-pages:gh-pages
          tag="${{ github.ref_name }}"
          DOC_VERSION=${tag%.*}
          cd docs
          pdm run mike deploy --no-redirect --update-aliases "$DOC_VERSION" latest
          git push origin gh-pages

  upload_to_pypi:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

  create-github-release:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get Changelog
        run: |
          awk '/-{3,}/{flag=1;next}/Release/{if (flag==1)exit}flag' CHANGELOG.md > .changelog.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          body_path: .changelog.md
          draft: false
          prerelease: false