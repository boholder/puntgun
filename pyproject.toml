[project]
# PEP 621 project metadata
# See https://www.python.org/dev/peps/pep-0621/
name = "puntgun"
version = "0.1.0"
description = "A configurable automation command line tool for Twitter."
authors = [
    { name = "boholder", email = "bottleholder@anche.no" },
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.10,<3.11"
dependencies = [
    "dynaconf<4.0.0,>=3.1.9",
    "tweepy<5.0.0,>=4.10.0",
    "reactivex<5.0.0,>=4.0.4",
    "cryptography<38.0.0,>=37.0.4",
    "loguru<1.0.0,>=0.6.0",
    "pydantic<2.0.0,>=1.9.2",
    "orjson<4.0.0,>=3.7.12",
    "click>=8.1.3",
]
classifiers = [
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Intended Audience :: End Users/Desktop"
]

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[project.urls]
"Homepage" = "https://github.com/boholder/puntgun"
"Bug Tracker" = "https://github.com/boholder/puntgun/issues"
"Discussions" = "https://github.com/boholder/puntgun/discussions"

[tool.pdm.dev-dependencies]
test = [
    "pytest<8.0.0,>=7.1.2",
    "PyHamcrest<3.0.0,>=2.0.4",
]
doc = [
    "mkdocs>=1.1",
    "mkdocs-material>=7.3",
    "mkdocstrings[python]>=0.18",
    "markdown-include>=0.5.1",
    "mike>=1.1.2",
    "setuptools>=62.3.3",
    "markdown-exec>=0.7.0",
]

[tool.pdm.build]
excludes = ["./**/.git"]
source-includes = [
    "tests",
    "CHANGELOG.md",
    "LICENSE",
    "README.md",
    "CONTRIBUTING.md"
]

# Scripts for development
[tool.pdm.scripts]
doc = { shell = "cd docs && mkdocs serve", help = "Start the dev server for doc preview" }
test = "pytest"
lint = "pre-commit run --all-files"

[tool.pytest.ini_options]
pythonpath = ["puntgun", "tests"]
testpaths = [
    "tests/",
]

# Coveralls job in github action needs this config
[tool.coverage.run]
relative_files = true

# Drawing on:
# https://github.com/psf/black/blob/main/pyproject.toml
[tool.black]
line-length = 120
exclude = '''
/(
  | \.git
  | \.pytest_cache
  | tests/\.pytest_cache
  | \.coverage
  | \.venv
  | venv
  | build
  | dist
  | old
)/
'''

# https://pycqa.github.io/isort/docs/configuration/options.html
[tool.isort]
profile = "black"
atomic = true
filter_files = true
known_first_party = ["puntgun"]
known_third_party = [
    "pytest",
]

# The key config for building executable wheel
# https://github.com/pypa/pipx#where-does-pipx-install-apps-from
# https://python-packaging.readthedocs.io/en/latest/command-line-scripts.html#the-console-scripts-entry-point
# https://pdm.fming.dev/latest/pyproject/pep621/#console-scripts
[project.scripts]
puntgun = "puntgun.__main__:cli"